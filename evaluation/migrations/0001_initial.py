# Generated by Django 5.2 on 2025-05-04 20:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('experiments', '0002_rename_document_chunkset_source_text_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExperimentChunkAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('k_relevant', models.PositiveIntegerField(blank=True, help_text='|C_relevant|', null=True)),
                ('analysis_time', models.DateTimeField(auto_now_add=True)),
                ('chunk_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.chunkset')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.experiment')),
            ],
            options={
                'unique_together': {('experiment', 'chunk_set')},
            },
        ),
        migrations.CreateModel(
            name='RetrievalSimulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retriever_name', models.CharField(help_text='e.g., FAISS', max_length=100)),
                ('embedding_model_name', models.CharField(help_text='e.g., all-MiniLM-L6-v2', max_length=150)),
                ('k_retrieved', models.PositiveIntegerField(help_text='Number of chunks retrieved')),
                ('rdsg_score', models.FloatField(blank=True, help_text='Calculated RDSG score', null=True)),
                ('ran_at', models.DateTimeField(auto_now_add=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='evaluation.experimentchunkanalysis')),
            ],
        ),
        migrations.CreateModel(
            name='RankedRelevantChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ideal_rank', models.PositiveIntegerField(help_text='Position in Rank_expected (1-based)')),
                ('intrinsic_importance_w', models.FloatField(blank=True, help_text='w(c)', null=True)),
                ('relevance_density', models.FloatField(blank=True, help_text='Density(c)', null=True)),
                ('effective_relevance_w_prime', models.FloatField(blank=True, help_text="w'(c) = w(c) * sqrt(Density(c))", null=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranked_relevant_chunks', to='evaluation.experimentchunkanalysis')),
                ('chunk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.chunk')),
            ],
            options={
                'ordering': ['ideal_rank'],
                'unique_together': {('analysis', 'chunk')},
            },
        ),
        migrations.CreateModel(
            name='RetrievedChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retrieved_rank', models.PositiveIntegerField(help_text='Position i in the retrieved list (1-based)')),
                ('similarity_score_s', models.FloatField(help_text='Similarity score s_i from retriever')),
                ('chunk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='experiments.chunk')),
                ('simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retrieved_chunks', to='evaluation.retrievalsimulation')),
            ],
            options={
                'ordering': ['retrieved_rank'],
                'unique_together': {('simulation', 'retrieved_rank')},
            },
        ),
    ]
